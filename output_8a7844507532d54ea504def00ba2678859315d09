autoreconf: export WARNINGS=
autoreconf: Entering directory '.'
autoreconf: configure.ac: not using Gettext
autoreconf: running: aclocal --force -I m4 ${ACLOCAL_FLAGS}
autoreconf: configure.ac: tracing
autoreconf: configure.ac: not using Libtool
autoreconf: configure.ac: not using Intltool
autoreconf: configure.ac: not using Gtkdoc
autoreconf: running: /usr/bin/autoconf --force
autoreconf: configure.ac: not using Autoheader
autoreconf: running: automake --add-missing --copy --force-missing
configure.ac:6: installing './config.guess'
configure.ac:6: installing './config.sub'
configure.ac:10: installing './install-sh'
configure.ac:10: installing './missing'
autoreconf: Leaving directory '.'
Skipping configure process.
scan-build: Using '/usr/lib/llvm-19/bin/clang' for static analysis
checking build system type... x86_64-pc-linux-gnu
checking host system type... x86_64-pc-linux-gnu
checking for a BSD-compatible install... /usr/bin/install -c
checking whether sleep supports fractional seconds... yes
checking filesystem timestamp resolution... 0.01
checking whether build environment is sane... yes
checking for a race-free mkdir -p... /usr/bin/mkdir -p
checking for gawk... no
checking for mawk... mawk
checking whether make sets $(MAKE)... yes
checking whether make supports nested variables... yes
checking xargs -n works... yes
checking whether UID '0' is supported by ustar format... yes
checking whether GID '0' is supported by ustar format... yes
checking how to create a ustar tar archive... gnutar
checking for pkg-config... /usr/bin/pkg-config
checking pkg-config is at least version 0.19... yes
checking whether ln -s works... yes
checking for ctk-update-icon-cache... /usr/bin/ctk-update-icon-cache
checking for git... /usr/bin/git
checking for icontool-render... false
checking for inkscape... false
checking for ctk-encode-symbolic-svg... /usr/bin/ctk-encode-symbolic-svg
checking that generated files are newer than configure... done
configure: creating ./config.status
config.status: creating Makefile
config.status: creating advaita-icon-theme.pc
config.status: creating src/Makefile
config.status: creating src/fullcolor/Makefile
config.status: creating src/symbolic/Makefile
config.status: creating src/spinner/Makefile
config.status: creating win32/Makefile
config.status: creating win32/advaita-msvc.mak
scan-build: Analysis run complete.
scan-build: Removing directory '/tmp/scan-build-2025-08-13-123904-6221-1' because it contains no reports.
scan-build: No bugs found.
scan-build: Using '/usr/lib/llvm-19/bin/clang' for static analysis
git.mk: Generating .gitignore
Making all in src
make[1]: Entering directory '/rootdir/src'
git.mk: Generating .gitignore
Making all in fullcolor
make[2]: Entering directory '/rootdir/src/fullcolor'
git.mk: Generating .gitignore
make[2]: Leaving directory '/rootdir/src/fullcolor'
Making all in symbolic
make[2]: Entering directory '/rootdir/src/symbolic'
for file in `cd ../../Advaita/scalable; find . -name "*.svg"`; do \
	context="`dirname $file`"; \
	for size in 16x16 24x24 32x32 48x48 64x64 96x96; do \
		/usr/bin/mkdir -p ../../Advaita/$size/$context; \
		touch ../../Advaita/$size/$context/.placeholder; \
	done \
done
git.mk: Generating .gitignore
make[2]: Leaving directory '/rootdir/src/symbolic'
Making all in spinner
make[2]: Entering directory '/rootdir/src/spinner'
git.mk: Generating .gitignore
make[2]: Leaving directory '/rootdir/src/spinner'
make[2]: Entering directory '/rootdir/src'
make[2]: Nothing to be done for 'all-am'.
make[2]: Leaving directory '/rootdir/src'
make[1]: Leaving directory '/rootdir/src'
Making all in win32
make[1]: Entering directory '/rootdir/win32'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/rootdir/win32'
make[1]: Entering directory '/rootdir'
dirs="`echo ./Advaita/8x8/emblems,./Advaita/8x8/legacy,./Advaita/16x16/actions,./Advaita/16x16/apps,./Advaita/16x16/categories,./Advaita/16x16/devices,./Advaita/16x16/emblems,./Advaita/16x16/emotes,./Advaita/16x16/legacy,./Advaita/16x16/mimetypes,./Advaita/16x16/places,./Advaita/16x16/status,./Advaita/16x16/ui,./Advaita/22x22/devices,./Advaita/22x22/emblems,./Advaita/22x22/legacy,./Advaita/22x22/mimetypes,./Advaita/22x22/places,./Advaita/22x22/status,./Advaita/22x22/ui,./Advaita/24x24/actions,./Advaita/24x24/apps,./Advaita/24x24/categories,./Advaita/24x24/devices,./Advaita/24x24/emblems,./Advaita/24x24/emotes,./Advaita/24x24/legacy,./Advaita/24x24/mimetypes,./Advaita/24x24/places,./Advaita/24x24/status,./Advaita/24x24/ui,./Advaita/32x32/actions,./Advaita/32x32/apps,./Advaita/32x32/categories,./Advaita/32x32/devices,./Advaita/32x32/emblems,./Advaita/32x32/emotes,./Advaita/32x32/legacy,./Advaita/32x32/mimetypes,./Advaita/32x32/places,./Advaita/32x32/status,./Advaita/32x32/ui,./Advaita/48x48/actions,./Advaita/48x48/apps,./Advaita/48x48/categories,./Advaita/48x48/devices,./Advaita/48x48/emblems,./Advaita/48x48/emotes,./Advaita/48x48/legacy,./Advaita/48x48/mimetypes,./Advaita/48x48/places,./Advaita/48x48/status,./Advaita/48x48/ui,./Advaita/64x64/actions,./Advaita/64x64/apps,./Advaita/64x64/categories,./Advaita/64x64/devices,./Advaita/64x64/emblems,./Advaita/64x64/emotes,./Advaita/64x64/legacy,./Advaita/64x64/mimetypes,./Advaita/64x64/places,./Advaita/64x64/status,./Advaita/64x64/ui,./Advaita/96x96/actions,./Advaita/96x96/apps,./Advaita/96x96/categories,./Advaita/96x96/devices,./Advaita/96x96/emblems,./Advaita/96x96/emotes,./Advaita/96x96/legacy,./Advaita/96x96/mimetypes,./Advaita/96x96/places,./Advaita/96x96/status,./Advaita/96x96/ui,./Advaita/256x256/legacy,./Advaita/256x256/mimetypes,./Advaita/256x256/places,./Advaita/256x256/status,./Advaita/512x512/devices,./Advaita/512x512/emblems,./Advaita/512x512/legacy,./Advaita/512x512/mimetypes,./Advaita/512x512/places,./Advaita/512x512/status,scalable/actions,scalable/apps,scalable/categories,scalable/devices,scalable/emblems,scalable/emotes,scalable/mimetypes,scalable/places,scalable/status,scalable/legacy,scalable/ui,scalable-up-to-32/status, | sed -e 's#./Advaita/##g'`"; \
sed -e "s|\@THEME_DIRS\@|$dirs|g" < index.theme.in > index.theme; \
for dir in `echo $dirs | sed -e "s/,/ /g"`; do \
	sizefull="`dirname $dir`"; \
	if test "$sizefull" = "scalable"; then \
		size="16"; \
	elif test "$sizefull" = "scalable-up-to-32"; then \
		size="16"; \
	else \
		size="`echo $sizefull | sed -e 's/x.*$//g'`"; \
	fi; \
	context="`basename $dir`"; \
	echo "[$dir]" >> index.theme; \
	if test "$context" = "actions"; then \
		echo "Context=Actions" >> index.theme; \
	fi; \
	if test "$context" = "animations"; then \
		echo "Context=Animations" >> index.theme; \
	fi; \
	if test "$context" = "apps"; then \
		echo "Context=Applications" >> index.theme; \
	fi; \
	if test "$context" = "categories"; then \
		echo "Context=Categories" >> index.theme; \
	fi; \
	if test "$context" = "devices"; then \
		echo "Context=Devices" >> index.theme; \
	fi; \
	if test "$context" = "emblems"; then \
		echo "Context=Emblems" >> index.theme; \
	fi; \
	if test "$context" = "emotes"; then \
		echo "Context=Emotes" >> index.theme; \
	fi; \
	if test "$context" = "intl"; then \
		echo "Context=International" >> index.theme; \
	fi; \
	if test "$context" = "mimetypes"; then \
		echo "Context=MimeTypes" >> index.theme; \
	fi; \
	if test "$context" = "places"; then \
		echo "Context=Places" >> index.theme; \
	fi; \
	if test "$context" = "status"; then \
		echo "Context=Status" >> index.theme; \
	fi; \
	if test "$context" = "ui"; then \
		echo "Context=UI" >> index.theme; \
	fi; \
	if test "$context" = "legacy"; then \
		echo "Context=Legacy" >> index.theme; \
	fi; \
	echo "Size=$size" >> index.theme; \
	if test "$sizefull" = "scalable"; then \
		echo "MinSize=8" >> index.theme; \
		echo "MaxSize=512" >> index.theme; \
		echo "Type=Scalable" >> index.theme; \
	elif test "$sizefull" = "scalable-up-to-32"; then \
		echo "MinSize=16" >> index.theme; \
		echo "MaxSize=32" >> index.theme; \
		echo "Type=Scalable" >> index.theme; \
	elif test "$size" = "256"; then \
		echo "MinSize=56" >> index.theme; \
		echo "MaxSize=256" >> index.theme; \
		echo "Type=Scalable" >> index.theme; \
	elif test "$size" = "512"; then \
		echo "MinSize=56" >> index.theme; \
		echo "MaxSize=512" >> index.theme; \
		echo "Type=Scalable" >> index.theme; \
	else \
		echo "Type=Fixed" >> index.theme; \
	fi; \
	echo "" >> index.theme; \
done
make[1]: Leaving directory '/rootdir'
scan-build: Analysis run complete.
scan-build: Removing directory '/rootdir/html-report/2025-08-13-123904-6751-1' because it contains no reports.
scan-build: No bugs found.
Making check in src
make[1]: Entering directory '/rootdir/src'
Making check in fullcolor
make[2]: Entering directory '/rootdir/src/fullcolor'
make[2]: Nothing to be done for 'check'.
make[2]: Leaving directory '/rootdir/src/fullcolor'
Making check in symbolic
make[2]: Entering directory '/rootdir/src/symbolic'
for file in `cd ../../Advaita/scalable; find . -name "*.svg"`; do \
	context="`dirname $file`"; \
	for size in 16x16 24x24 32x32 48x48 64x64 96x96; do \
		/usr/bin/mkdir -p ../../Advaita/$size/$context; \
		touch ../../Advaita/$size/$context/.placeholder; \
	done \
done
make[2]: Leaving directory '/rootdir/src/symbolic'
Making check in spinner
make[2]: Entering directory '/rootdir/src/spinner'
make[2]: Nothing to be done for 'check'.
make[2]: Leaving directory '/rootdir/src/spinner'
make[2]: Entering directory '/rootdir/src'
make[2]: Nothing to be done for 'check-am'.
make[2]: Leaving directory '/rootdir/src'
make[1]: Leaving directory '/rootdir/src'
Making check in win32
make[1]: Entering directory '/rootdir/win32'
make[1]: Nothing to be done for 'check'.
make[1]: Leaving directory '/rootdir/win32'
make[1]: Entering directory '/rootdir'
make[1]: Nothing to be done for 'check-am'.
make[1]: Leaving directory '/rootdir'
